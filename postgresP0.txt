insert into transaction values(default, 1000, '2022-03-03', 1, 2)

insert into customer values(default, 'Taylor', 'justcause', default, default)

insert into customer values(default, 'Shane', 'passtest', default. default)

insert into employees values(default, 'taylor', 'tay', 'Success', default)

alter table  add employee boolean default false
-
create table login
(
	id serial primary Key,
	username varchar(20) unique not null,
	password varchar(20) not null
	employee boolean default false
);

drop table transaction

create table transaction
(
    id integer generated always as identity,
    amount dec (15,2) not null,
    trans_date date not null,
    primary key(id),
    customerid_send integer references customer(id) on delete cascade,
    customerid_rec integer references customer(id) on delete cascade
)

create table customer
(
	id serial primary key,
	username varchar(20) unique not null,
	password varchar(20) not null,
	balance dec(15,2) default 1000,
	status boolean default false,
	constraint balance check(balance >= 0)
);

create table employees 
(
	id serial primary key,
	firstname varchar(20) not null,
	username varchar(20) unique not null,
	password varchar(20) not null,
	account boolean default true
	);

create table accounts (
	id int generated by default as identity,
	name varchar(100) not null,
	--balance dec(15,2) not null
	primary key(id)
);

select * from accounts

drop procedure withdrawal (debitorAccountId int,
	amount dec,
	inout wBalance int)

create or replace procedure transfer(
	sender int,
	receiver int,
	amount dec,
	inout debitorBalance int,
	inout creditorBalance int
)
language plpgsql
as $$
begin 
	update customer set balance = balance - amount where id = sender;
	update customer set balance = balance + amount where id = receiver;
	select balance into debitorBalance from customer where id = sender;
	select balance into creditorBalance from customer where id = receiver;

	commit;
end;$$

create or replace procedure withdrawal(
	
	
	debitorAccountId int,
	amount dec,
	inout withdrawBalance int
)
language plpgsql 
as $$ 
begin 
	
	update customer set balance = balance - amount where id = debitorAccountId;
	select balance into withdrawBalance from customer where id = debitorAccountId;

	commit;
end;$$ 

create or replace procedure depositing(

	debitorAccountId int,
	amount dec,
	inout depositBalance int
)
language plpgsql 
as $$ 
begin 
	update customer set balance = balance + amount where id = debitorAccountId;
	select balance into depositBalance from customer where id = debitorAccountId;

	commit;
end;$$ 

drop procedure approveAccount(username varchar, Astatus boolean)

create or replace procedure approveAccount(
	Ausername varchar,
	inout Astatus boolean
)
language plpgsql 
as $$ 
begin 
	
	update customer set status = true where Ausername = username;
	commit;

end;$$